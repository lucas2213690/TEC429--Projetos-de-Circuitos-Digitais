--parallel_add DEVICE_FAMILY="ACEX1K" MSW_SUBTRACT="NO" PIPELINE=0 REPRESENTATION="UNSIGNED" RESULT_ALIGNMENT="LSB" SHIFT=0 SIZE=2 WIDTH=5 WIDTHR=5 data result
--VERSION_BEGIN 9.0SP2 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2009:05:07:10:25:28:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_padd 2008:09:04:11:11:31:SJ cbx_parallel_add 2008:05:19:10:26:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ cbx_util_mgl 2008:11:21:14:58:47:SJ  VERSION_END


-- Copyright (C) 1991-2009 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION soft (in)
RETURNS ( out);

--synthesis_resources = lut 6 
SUBDESIGN par_add_nae
( 
	data[9..0]	:	input;
	result[4..0]	:	output;
) 
VARIABLE
	add1_result[5..0]	:	WIRE;
	sft2a[5..0] : soft;
	sft3a[5..0] : soft;
	sft4a[5..0] : soft;
	w29w	: WIRE;
	w38w[5..0]	: WIRE;

BEGIN 
	add1_result[] = sft2a[].out + sft3a[].out;
	sft2a[].in = ( w29w, ( data[4..4], ( data[3..3], ( data[2..2], ( data[1..0])))));
	sft3a[].in = ( w29w, ( data[9..9], ( data[8..8], ( data[7..7], ( data[6..5])))));
	sft4a[].in = add1_result[];
	result[4..0] = w38w[4..0];
	w29w = B"0";
	w38w[] = ( sft4a[5..5].out, sft4a[4..4].out, sft4a[3..3].out, sft4a[2..2].out, sft4a[1..1].out, sft4a[0..0].out);
END;
--VALID FILE
